// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// MenuDao is the manager for logic model data accessing and custom defined data operations functions management.
type MenuDao struct {
	Table   string      // Table is the underlying table name of the DAO.
	Group   string      // Group is the database configuration group name of current DAO.
	Columns MenuColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// MenuColumns defines and stores column names for table sys_menu.
type MenuColumns struct {
	Id         string // 主键
	ParentId   string // 父id
	Name       string // 名称/11111
	Icon       string // 菜单图标
	Urlkey     string // 菜单key
	Url        string // 链接地址
	Perms      string // 授权(多个用逗号分隔，如：user:list,user:create)
	Status     string // 状态//radio/2,隐藏,1,显示
	Type       string // 类型//select/1,目录,2,菜单,3,按钮
	Sort       string // 排序
	Level      string // 级别
	Enable     string // 是否启用//radio/1,启用,2,禁用
	UpdateTime string // 更新时间
	UpdateId   string // 更新人
	CreateTime string // 创建时间
	CreateId   string // 创建者
}

//  menuColumns holds the columns for table sys_menu.
var menuColumns = MenuColumns{
	Id:         "id",
	ParentId:   "parent_id",
	Name:       "name",
	Icon:       "icon",
	Urlkey:     "urlkey",
	Url:        "url",
	Perms:      "perms",
	Status:     "status",
	Type:       "type",
	Sort:       "sort",
	Level:      "level",
	Enable:     "enable",
	UpdateTime: "update_time",
	UpdateId:   "update_id",
	CreateTime: "create_time",
	CreateId:   "create_id",
}

// NewMenuDao creates and returns a new DAO object for table data access.
func NewMenuDao() *MenuDao {
	return &MenuDao{
		Group:   "default",
		Table:   "sys_menu",
		Columns: menuColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MenuDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MenuDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MenuDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
